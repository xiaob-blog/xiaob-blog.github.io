<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XIAO_B</title>
  
  
  <link href="http://xiaob-blog.github.io/atom.xml" rel="self"/>
  
  <link href="http://xiaob-blog.github.io/"/>
  <updated>2022-08-11T06:39:55.317Z</updated>
  <id>http://xiaob-blog.github.io/</id>
  
  <author>
    <name>xiao_b</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在安卓手机上运行虚拟机</title>
    <link href="http://xiaob-blog.github.io/post/%E5%9C%A8%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E4%B8%8A%E8%BF%90%E8%A1%8C%E8%99%9A%E6%8B%9F%E6%9C%BA.html"/>
    <id>http://xiaob-blog.github.io/post/%E5%9C%A8%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E4%B8%8A%E8%BF%90%E8%A1%8C%E8%99%9A%E6%8B%9F%E6%9C%BA.html</id>
    <published>2022-08-11T06:38:08.000Z</published>
    <updated>2022-08-11T06:39:55.317Z</updated>
    
    <content type="html"><![CDATA[<p>虽然版本很多 但主要也就是那几种 加上我之前略略研究过 算是懂得些皮毛 我的建议是这几种启动器:</p><p>boches limbo qemu</p><p>其中boches有些衍生版本 不多介绍 另外 limbo是基于qemu内核的 算是个增强版 效率目前基本持平 所以我倾向于使用limbo 目前最新版本是6.0.0 但我一直在用5.1.0 没啥原因（其实是懒得更新）</p><p>至于链接:</p><p>官网（国内可能上不去）: <a href="https://github.com/limboemu/limbo/wiki/Guides">https://github.com/limboemu/limbo/wiki/Guides</a></p><p>我的网盘（5.1.0）:<a href="https://quqi.avyeld.com/s/3435758/MiDiam3nYwas8tta">https://quqi.avyeld.com/s/3435758/MiDiam3nYwas8tta</a></p><p>至于用虚拟机嘛 自然是要玩系统的 镜像太大所以我给的官网链接（不要说破 其实我是懒得上传）</p><p>win11: <a href="https://www.microsoft.com/zh-cn/software-download/windows11">https://www.microsoft.com/zh-cn/software-download/windows11</a></p><p>win10: <a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO">https://www.microsoft.com/zh-cn/software-download/windows10ISO</a></p><p>win8.1: <a href="https://www.microsoft.com/zh-cn/software-download/windows8ISO">https://www.microsoft.com/zh-cn/software-download/windows8ISO</a></p><p>Linux发行版很多 加上随便百度一下就能找到官网 所以我就不再一一放出 麻烦大家自己百度了</p><p>Macos big sur:<a href="https://cloud.189.cn/web/share?code=QjI7reruUn6f">https://cloud.189.cn/web/share?code=QjI7reruUn6f</a></p><p>那么</p><p>我们现在有了系统 要把它放在哪呢？</p><p>我最近只接触过limbo 所以只能确定limbo只能创建最大20gb的虚拟磁盘</p><p>根本不够用啊！</p><p>所以</p><p>我们就需要更大的虚拟磁盘了</p><p>比如</p><p>16tb的？</p><p>没错 是TB！（当然 不会给你手机扩容的 只是欺骗了系统而已 东西还是存在你的内部存储中 当然 是会压缩的）</p><p>16TB虚拟磁盘:</p><p><a href="https://quqi.avyeld.com/s/3435758/L1h43XgokbarQf6E">https://quqi.avyeld.com/s/3435758/L1h43XgokbarQf6E</a></p><p>另外 如果您是玩Linux的 我建议您用termux 这是一个十分好用的虚拟终端 完全适配安卓</p><p>termux链接:<a href="https://f-droid.org/repo/com.termux_117.apk">https://f-droid.org/repo/com.termux_117.apk</a></p><p>termux原生是不适配图形化界面的 所以我们就需要一个远程桌面来链接（termux xfce默认ip:127.0.0.1:5901）这里我推荐vnc viewer</p><p>vnc viewver（我在用的版本 不知道是不是最新版）:</p><p><a href="https://quqi.avyeld.com/s/3435758/300ylIoAs9VTjSZo">https://quqi.avyeld.com/s/3435758/300ylIoAs9VTjSZo</a></p><p>考虑到大家可能都不会搞这个东西 我给大家准备了一个十分流行的工具:anlinux！</p><p>anlinux（进去直接复制代码就好 十分简单 但可用性我不敢保证）（这是第三方链接哦 大家慎重访问 我是没问题的）:</p><p><a href="http://b.xzfile.com/apk3/anlinuxv6.21stable_downcc.com.apk">http://b.xzfile.com/apk3/anlinuxv6.21stable_downcc.com.apk</a></p><p>另外 我还为大家准备了另外一份文字安装教程 防止上面的工具失效（kali是用两种方法都安装不了的 很抱歉没能给大家解决方案）（这份教程不是我写的 望大家多多尊重和支持原作者哦！）</p><p>文字教程:</p><p><a href="https://blog.csdn.net/zzhds/article/details/115976332">https://blog.csdn.net/zzhds/article/details/115976332</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然版本很多 但主要也就是那几种 加上我之前略略研究过 算是懂得些皮毛 我的建议是这几种启动器:&lt;/p&gt;
&lt;p&gt;boches limbo qemu&lt;/p&gt;
&lt;p&gt;其中boches有些衍生版本 不多介绍 另外 limbo是基于qemu内核的 算是个增强版 效率目前基本持平 所</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用UTM在ios14+设备上运行虚拟机</title>
    <link href="http://xiaob-blog.github.io/post/%E4%BD%BF%E7%94%A8UTM%E5%9C%A8ios14-%E8%AE%BE%E5%A4%87%E4%B8%8A%E8%BF%90%E8%A1%8C%E8%99%9A%E6%8B%9F%E6%9C%BA.html"/>
    <id>http://xiaob-blog.github.io/post/%E4%BD%BF%E7%94%A8UTM%E5%9C%A8ios14-%E8%AE%BE%E5%A4%87%E4%B8%8A%E8%BF%90%E8%A1%8C%E8%99%9A%E6%8B%9F%E6%9C%BA.html</id>
    <published>2022-08-11T06:20:46.000Z</published>
    <updated>2022-08-11T06:32:40.285Z</updated>
    
    <content type="html"><![CDATA[<p>我推荐使用官方推荐的ios自签应用：Altstore(<a href="https://altstore.io/">https://altstore.io/</a>)</p><p>几乎任何自签名软件都是需要一台电脑的</p><p>并且需要每七天续签一次</p><p>感觉麻烦？</p><p>那就可以购买开发者签名服务</p><p>（使用这个方法无需任何电脑）</p><p>我推荐的开发者签名网站 ：isign(<a href="https://isign.ren/">https://isign.ren</a>)</p><p>首先 下载最新版ITunes和ICloud</p><p>（ITunes：<a href="https://support.apple.com/kb/DL2065?locale=zh_CN">https://support.apple.com/kb/DL2065?locale=zh_CN</a></p><p>ICloud：<a href="https://updates.cdn-apple.com/2020/windows/001-39935-20200911-1A70AA56-F448-11EA-8CC0-99D41950005E/iCloudSetup.exe">https://updates.cdn-apple.com/2020/windows/001-39935-20200911-1A70AA56-F448-11EA-8CC0-99D41950005E/iCloudSetup.exe</a> ）</p><p>然后从刚才的官网下载Altserver（pc端 需要Windows 10或更高版本）</p><p>然后解压 双击里面任意一个文件</p><p>根据引导安装</p><p>安装完成后 你会发现托盘里多出一个菱形</p><p>那个就是Altserver</p><p>然后掏出你的lightning数据线 连接上你的iPhone</p><p>打开ITunes 点击手机图标-摘要-下拉找到选项-勾选通过WIFI同步</p><p>查看手机并选择信任此电脑</p><p>然后右键那个菱形 点击Install Altstore并选择你的设备</p><p>然后输入你的Apple ID和密码用作签名</p><p>（强烈建议注册一个新ID来签名）</p><p>这时电脑会弹出Installing提示</p><p>等待再次弹出Installed后打开手机</p><p>你会发现多了一个Altstore</p><p>这时候它是打不开的</p><p>打开手机的设置-通用-描述文件与设备管理-你的Apple ID-点击信任</p><p>这样就可以打开啦</p><p>然后在手机上点击 <a href="https://alt.getutm.app/">https://alt.getutm.app</a></p><p>应该会跳转至Altstore</p><p>点击Add Source</p><p>在Browse选项卡就可以找到UTM和UTM SE了</p><hr><p>这里注意区分 UTM是需要JIT的 但UTM SE不需要</p><p>但是代价就是UTM SE少了将近60%性能！</p><p>当然 如果只是尝鲜 可以直接点击下载UTM SE</p><p>（安装任何软件都需要连接电脑 如果弹出登录ID 请登录刚才电脑登录的ID）</p><p>但是如果要使用的话 请点击安装后继续往下看</p><hr><p>UTM标准版在越狱环境下是可以正常运行的</p><p>（还有自带越狱的A12以上ios14.2和14.3）</p><p>但是非越狱环境呢？</p><p>我们可以利用一个插件</p><p>这个插件就是UTM作者osy的另一个开源项目</p><p>Jitterbug</p><p>它模拟了ios内置的Xcode调试器来在非越狱环境下运行越狱应用</p><p>Jitterbug的Github存储库：<a href="https://github.com/osy/Jitterbug/releases">https://github.com/osy/Jitterbug/releases</a></p><p>我们可以从自己的手机上开启JIT（需要开发者签名 建议使用上面的isign）</p><p>或者用另一台ios设备调试本机（一会会分开讲）</p><p>注意 使用Jitterbug需要处于WIFI环境</p><hr><p>首先 将手机连接到电脑</p><p>电脑打开<a href="https://github.com/osy/Jitterbug/releases%E5%B9%B6%E9%80%89%E6%8B%A9%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC">https://github.com/osy/Jitterbug/releases并选择最新版本</a></p><p>拉到界面最底下会发现有三个文件 下载你对应版本的文件</p><p>然后使用cmd执行解压出来的执行文件</p><p>然后在解压目录会出现配对文件 将它传输至手机</p><p>然后 在<a href="https://github.com/mspvirajpatel/Xcode_Developer_Disk_Images/releases%E4%B8%AD%E6%89%BE%E5%88%B0%E8%B7%9F%E6%82%A8%E7%9A%84ios%E7%89%88%E6%9C%AC%E4%B8%80%E8%87%B4%E6%88%96%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E7%89%88%E6%9C%AC">https://github.com/mspvirajpatel/Xcode_Developer_Disk_Images/releases中找到跟您的ios版本一致或最接近的版本</a> 并下载 【版本号】.zip 并在解压后将（全部两个！！！）文件使用刚才的方法传输至手机</p><p>在这之后 请使用您的开发者签名或在isign签名并安装最新版的Jitterbug</p><p>（ipa：<strong><a href="https://github.com/osy/Jitterbug/releases">https://github.com/osy/Jitterbug/releases</a> 选择版本并划到最后）</strong></p><p>然后将镜像挂载至Jitterbug</p><p>最后 在启动台中选择您的被控iPhone（可以是本机）再选择配对文件即可正常运行</p><p>如果要选择支持文件 优先选择dmg格式文件</p><p>或者使用另一台ios设备远程调试您的iPhone</p><p>只需要将以上操作在主控机上进行操作即可（这种方式不需要开发者签名</p><p>直接侧载即可）</p><p>或者 如果您的手边有一台Windows Pc 您也可以使用Altjit临时开启Jit权限</p><p>操作方法：</p><p>（以下操作请先退出Altserver）</p><p>首先在pc端下载发布 ·libimobiledevice-win32&#x2F;imobiledevice-net ·GitHub的最新版本中的符合您操作系统架构的zip包</p><p>请将该zip解压缩至C:\libimobiledevice (没有则创建) 以方便后面的指令操作</p><p>并且在<a href="https://github.com/mspvirajpatel/Xcode_Developer_Disk_Images/releases">https://github.com/mspvirajpatel/Xcode_Developer_Disk_Images/releases</a></p><p>中选择跟您的ios版本一致或最接近的版本 同样解压至C:\libimobiledevice中</p><p>现在 以刚才配对时的方法打开命令提示符并导航至C:\libimobiledevice 输入</p><pre class="line-numbers language-none"><code class="language-none">ideviceimagemounter.exe C:\libimobiledevice\DeveloperDiskImage.dmg</code></pre><p>现在 请将您的手机通过数据线连接至电脑 并且启动Altserver</p><p>右键Altserver在托盘中的图标 并且点击Enable JIT-您的设备-要启用JIT的应用（保证应用在前台运行）出现JIT will remain enable提示就是启用成功啦</p><p>在退出应用之前 您选择的应用都是在以JIT模式运行</p><p>（用这种方法UTM可能错误地提示缺失JIT权限 您可以无视它）</p><p>到此为止 我已经介绍了在无越狱的情况下运行UTM标准版的所有（也许？）方法 大家可以自己尝试</p><p>如果遇到问题可以直接在公众号后台询问 看到就会回复</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我推荐使用官方推荐的ios自签应用：Altstore(&lt;a href=&quot;https://altstore.io/&quot;&gt;https://altstore.io/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;几乎任何自签名软件都是需要一台电脑的&lt;/p&gt;
&lt;p&gt;并且需要每七天续签一次&lt;/p&gt;
&lt;p&gt;感</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用VMware安装Macos12</title>
    <link href="http://xiaob-blog.github.io/post/%E4%BD%BF%E7%94%A8VMware%E5%AE%89%E8%A3%85Macos12.html"/>
    <id>http://xiaob-blog.github.io/post/%E4%BD%BF%E7%94%A8VMware%E5%AE%89%E8%A3%85Macos12.html</id>
    <published>2022-08-11T03:53:43.000Z</published>
    <updated>2022-08-11T04:00:53.336Z</updated>
    
    <content type="html"><![CDATA[<p>（资源在最后）</p><p>首先 vmware本身是不支持直接安装macos的 所以我们就要借助补丁来小小地”帮助”一下vm。</p><p>打开我分享的补丁文件夹 </p><p>右键win-install.cmd 单击以管理员身份运行</p><p>授予权限（这里的所有步骤都要在关闭vmware的前提下进行 否则安装会失败）它会自动停止vmware的服务</p><p>待安装完成后再打开 完全解放双手 </p><p>如果意外安装失败 也可以手动停止vmware服务再运行（按住win＋r键 弹出的运行框中输入services.msc停用和vmware有关的所有服务）</p><p>安装好后打开vmware 按照正常创建虚拟机的步骤走一遍 </p><p>系统中应该会多出一个Apple Mac OS X</p><p>我们选择它 </p><p>然后硬件配置根据大家的物理机配置选择适当的配置就可以了 </p><p>比如我是5800x＋16g内存 就选择了13g（最大建议内存）＋8核心的配置</p><p>至于硬盘嘛 选择多大看大家的需求和实际硬盘大小 </p><p>之后也可以扩展 </p><p>所以我建议大家选择的大小可以不用太大 100g左右即可 </p><p>然后挂上我提供的那个.iso.txt文件 去掉.txt后缀 挂载到光盘上</p><p>完成了这步 你是不是急不可耐地想要开机了？</p><p>现在开机不出意外的话肯定会报错 </p><p>这时我们需要右键虚拟机 打开虚拟机位置 右键.vmx文件 用记事本打开 再打开我提供的txt文件</p><p>【Intel处理器】(我至今未尝试成功 如发现启动不了 无论是Intel处理器还是AMD处理器都可以尝试一下AMD的代码)</p><pre class="line-numbers language-none"><code class="language-none">smc.version &#x3D; &quot;0&quot;cpuid.0.eax &#x3D; &quot;0000:0000:0000:0000:0000:0000:0000:1011&quot;cpuid.0.ebx &#x3D; &quot;0111:0101:0110:1110:0110:0101:0100:0111&quot;cpuid.0.ecx &#x3D; &quot;0110:1100:0110:0101:0111:0100:0110:1110&quot;cpuid.0.edx &#x3D; &quot;0100:1001:0110:0101:0110:1110:0110:1001&quot;cpuid.1.eax &#x3D; &quot;0000:0000:0000:0001:0000:0110:0111:0001&quot;cpuid.1.ebx &#x3D; &quot;0000:0010:0000:0001:0000:1000:0000:0000&quot;cpuid.1.ecx &#x3D; &quot;1000:0010:1001:1000:0010:0010:0000:0011&quot;cpuid.1.edx &#x3D; &quot;0000:1111:1010:1011:1111:1011:1111:1111&quot;featureCompat.enable &#x3D; &quot;FALSE&quot;</code></pre><p>【AMD处理器】</p><pre class="line-numbers language-none"><code class="language-none">smc.version &#x3D; &quot;0&quot;cpuid.0.eax &#x3D; &quot;0000:0000:0000:0000:0000:0000:0000:1011&quot;cpuid.0.ebx &#x3D; &quot;0111:0101:0110:1110:0110:0101:0100:0111&quot;cpuid.0.ecx &#x3D; &quot;0110:1100:0110:0101:0111:0100:0110:1110&quot;cpuid.0.edx &#x3D; &quot;0100:1001:0110:0101:0110:1110:0110:1001&quot;cpuid.1.eax &#x3D; &quot;0000:0000:0000:0001:0000:0110:0111:0001&quot;cpuid.1.ebx &#x3D; &quot;0000:0010:0000:0001:0000:1000:0000:0000&quot;cpuid.1.ecx &#x3D; &quot;1000:0010:1001:1000:0010:0010:0000:0011&quot;cpuid.1.edx &#x3D; &quot;0000:0111:1000:1011:1111:1011:1111:1111&quot;</code></pre><p>AMD处理器就复制AMD代码 Intel处理器就复制Intel代码 </p><p>但是我用Intel的处理器的一直报错 但是使用AMD的代码却畅通无阻 </p><p>所以 大家要是Intel的处理器使用Intel的代码不行的话 也可以改用AMD代码尝试一下 </p><p>复制相应的代码后 直接粘贴在vmx文件末尾 </p><p>然后保存 正常开机</p><p>打开macos的安装界面 如果之前安装过的话 应该会很熟悉 </p><p>先点击磁盘工具 抹掉虚拟磁盘 </p><p>然后再返回 选择安装macos monterey </p><p>然后选择刚刚抹掉的磁盘 就开始安装macos了</p><p>安装好了macos 我们还要安装一下vmware tools </p><p>首先点击虚拟机 可移动设备 CD&#x2F;DVD 断开连接 </p><p>然后再点击安装vmware tools </p><p>应该会自动打开安装程序 按照它的引导安装就好了</p><hr><p>到此为止 macos的monterey12.1的安装已经完成 </p><p>至少在我的虚拟机上 更新是正常的</p><p>不过还是建议大家在更新之前拍摄一个快照 防止崩溃</p><p>当然 安装的macos是属于黑苹果 </p><p>许多白苹果功能都无法使用 大家可以自行洗白和安装驱动 </p><p>感谢大家的阅读 下面是链接</p><p>文章中使用的所有资源:</p><p><a href="https://www.aliyundrive.com/s/r3rmCeMAV6o">https://www.aliyundrive.com/s/r3rmCeMAV6o</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;（资源在最后）&lt;/p&gt;
&lt;p&gt;首先 vmware本身是不支持直接安装macos的 所以我们就要借助补丁来小小地”帮助”一下vm。&lt;/p&gt;
&lt;p&gt;打开我分享的补丁文件夹 &lt;/p&gt;
&lt;p&gt;右键win-install.cmd 单击以管理员身份运行&lt;/p&gt;
&lt;p&gt;授予权限（这里的所</summary>
      
    
    
    
    
  </entry>
  
</feed>
